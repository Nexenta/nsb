set name=pkg.fmri value=pkg:/developer/$(name)@$(ips-version)
set name=pkg.summary value="$(summary), developer files"
set name=pkg.description value="Contain Node.js header and node-waf utility. \
Install this package if you want to write Node.js bindings"
set name=info.upstream-url value="$(home)"
set name=info.source-url value="$(download)"

license $(license-file) license="$(license)"

# FIXME: Versions ?
depend fmri=pkg:/library/libv8 type=require
depend fmri=pkg:/library/c-ares type=require
depend fmri=pkg:/library/libev type=require
depend fmri=pkg:/library/openssl type=require

depend fmri=pkg:/runtime/nodejs@$(ips-version) type=require
depend fmri=pkg:/runtime/nodejs@$(ips-version) type=incorporate


# Move headers into usr/include/nodejs:
<transform dir -> edit path /node /nodejs >
<transform file path=(.+/include)/node/(.+) -> \
   emit file %<1>/node/%<2> path=%<1>/nodejs/%<2> >
<transform file path=(.+/include)/node/(.+) -> \
   drop >

dir path=usr/include
dir path=usr/include/node
dir path=usr/include/node/uv-private
file path=usr/include/node/uv-private/uv-unix.h
file path=usr/include/node/uv-private/eio.h
file path=usr/include/node/uv-private/ngx-queue.h
file path=usr/include/node/uv-private/ev.h
file path=usr/include/node/uv-private/uv-win.h
file path=usr/include/node/uv-private/tree.h
file path=usr/include/node/eio-emul.h
file path=usr/include/node/node.h
file path=usr/include/node/node_buffer.h
file path=usr/include/node/ev-emul.h
file path=usr/include/node/node_object_wrap.h
file path=usr/include/node/node_version.h
file path=usr/include/node/uv.h

# Move WAF into usr/share/nodejs:
<transform dir -> edit path /lib/node/ /share/nodejs/ >
<transform file path=(.+/lib)/node/(.+) -> \
   emit file %<1>/node/%<2> path=usr/share/nodejs/%<2> >
<transform file path=(.+/lib)/node/(.+) -> \
   drop >

<transform dir file path=.+/wafadmin/.+ -> \
    default facet.devel true>

dir path=usr/lib/node/wafadmin
dir path=usr/lib/node/wafadmin/Tools
file path=usr/lib/node/wafadmin/pproc.py
file path=usr/lib/node/wafadmin/py3kfixes.py
file path=usr/lib/node/wafadmin/TaskGen.py
file path=usr/lib/node/wafadmin/__init__.py
file path=usr/lib/node/wafadmin/Logs.py
file path=usr/lib/node/wafadmin/Task.py
file path=usr/lib/node/wafadmin/Configure.py
file path=usr/lib/node/wafadmin/Build.py
file path=usr/lib/node/wafadmin/Scripting.py
file path=usr/lib/node/wafadmin/Utils.py
file path=usr/lib/node/wafadmin/ansiterm.py
file path=usr/lib/node/wafadmin/Runner.py
file path=usr/lib/node/wafadmin/Tools/compiler_d.py
file path=usr/lib/node/wafadmin/Tools/winres.py
file path=usr/lib/node/wafadmin/Tools/compiler_cc.py
file path=usr/lib/node/wafadmin/Tools/nasm.py
file path=usr/lib/node/wafadmin/Tools/xlcxx.py
file path=usr/lib/node/wafadmin/Tools/preproc.py
file path=usr/lib/node/wafadmin/Tools/icpc.py
file path=usr/lib/node/wafadmin/Tools/gdc.py
file path=usr/lib/node/wafadmin/Tools/unittestw.py
file path=usr/lib/node/wafadmin/Tools/gcc.py
file path=usr/lib/node/wafadmin/Tools/osx.py
file path=usr/lib/node/wafadmin/Tools/node_addon.py
file path=usr/lib/node/wafadmin/Tools/cc.py
file path=usr/lib/node/wafadmin/Tools/d.py
file path=usr/lib/node/wafadmin/Tools/config_c.py
file path=usr/lib/node/wafadmin/Tools/ar.py
file path=usr/lib/node/wafadmin/Tools/ccroot.py
file path=usr/lib/node/wafadmin/Tools/suncc.py
file path=usr/lib/node/wafadmin/Tools/intltool.py
file path=usr/lib/node/wafadmin/Tools/gas.py
file path=usr/lib/node/wafadmin/Tools/compiler_cxx.py
file path=usr/lib/node/wafadmin/Tools/icc.py
file path=usr/lib/node/wafadmin/Tools/dmd.py
file path=usr/lib/node/wafadmin/Tools/libtool.py
file path=usr/lib/node/wafadmin/Tools/__init__.py
file path=usr/lib/node/wafadmin/Tools/python.py
file path=usr/lib/node/wafadmin/Tools/xlc.py
file path=usr/lib/node/wafadmin/Tools/misc.py
file path=usr/lib/node/wafadmin/Tools/gxx.py
file path=usr/lib/node/wafadmin/Tools/suncxx.py
file path=usr/lib/node/wafadmin/Tools/gob2.py
file path=usr/lib/node/wafadmin/Tools/cxx.py
file path=usr/lib/node/wafadmin/Tools/gnu_dirs.py
file path=usr/lib/node/wafadmin/Node.py
file path=usr/lib/node/wafadmin/Environment.py
file path=usr/lib/node/wafadmin/Options.py
file path=usr/lib/node/wafadmin/Constants.py

# Do not bother with python version:
file path=usr/bin/node-waf \
    pkg.depend.bypass-generate=.* \
    facet.devel=true

